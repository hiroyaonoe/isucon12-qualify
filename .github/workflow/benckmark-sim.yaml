name: run benchmark

on:
  issue_comment:
    types:
      - created

jobs:
  run-bench:
    if: (github.event.issue.pull_request != null) && (contains(github.event.comment.body, '/bench'))
    runs-on: ubuntu-latest

    outputs:
      bench-result: ${{ steps.bench.outputs.result }}
      webapp1-result: ${{ steps.webapp1.outputs.result }}
      webapp2-result: ${{ steps.webapp2.outputs.result }}
      webapp3-result: ${{ steps.webapp3.outputs.result }}
      head-commit-hash: ${{ steps.get-commit-head.outputs.hash }}

    steps:
      - name: Get PR's branch
        uses: actions/github-script@v2
        id: get-target-branch
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            const pull_request = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
            return pull_request.data.head.ref

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.get-target-branch.outputs.result }}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      
      - name: Add ssh key
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa
      
      # https://github.com/hiroyaonoe/isucon11-qualify/issues/104
      # Ansibleのバージョンを下げるためにインストールし直す
      - name: Setup Ansible
        run: |
          # 先にansibleを実行してしまうとこのPATHがこれからも使用されてしまう
          # ansible --version
          pip install ansible==2.9.27
          ansible --version

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Apply terraform
        working-directory: ./terraform
        run: |
          echo 'allow_ssh_cidr = "0.0.0.0/0"' >> terraform.tfvars
          echo 'webapp_instance_type = "c5.large"' >> terraform.tfvars
          echo 'bench_instance_type = "c4.xlarge"' >> terraform.tfvars
          terraform init
          terraform validate
          terraform apply -auto-approve --parallelism=20

      - name: Get ip addresses
        id: get-ip-addresses
        working-directory: ./terraform
        run: |
          bench_ip=$(cat terraform.tfstate | jq .outputs.bench_public_ip.value | tr -d '"')
          webapp1_ip=$(cat terraform.tfstate | jq .outputs.webapp1_public_ip.value | tr -d '"')
          webapp2_ip=$(cat terraform.tfstate | jq .outputs.webapp2_public_ip.value | tr -d '"')
          webapp3_ip=$(cat terraform.tfstate | jq .outputs.webapp3_public_ip.value | tr -d '"')
          echo "::add-mask::$bench_ip"
          echo "::add-mask::$webapp1_ip"
          echo "::add-mask::$webapp2_ip"
          echo "::add-mask::$webapp3_ip"
          echo "::set-output name=bench_ip::$bench_ip"
          echo "::set-output name=webapp1_ip::$webapp1_ip"
          echo "::set-output name=webapp2_ip::$webapp2_ip"
          echo "::set-output name=webapp3_ip::$webapp3_ip"

      # instanceを立てた直後はuser_dataのスクリプト実行が完了していない可能性があるのでsshの疎通確認をする
      - name: Check ssh
        run: |
          bench_ip=${{ steps.get-ip-addresses.outputs.bench_ip }}
          webapp1_ip=${{ steps.get-ip-addresses.outputs.webapp1_ip }}
          webapp2_ip=${{ steps.get-ip-addresses.outputs.webapp2_ip }}
          webapp3_ip=${{ steps.get-ip-addresses.outputs.webapp3_ip }}
          for ip in $bench_ip $webapp1_ip $webapp2_ip $webapp3_ip; do
            for i in `seq 10`; do
              echo $i
              result=0
              ssh isucon@$ip -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -- : || result=$?
              echo $result
              if [ $result = 0 ]; then
                echo "ok"
                break
              fi
              sleep 1
            done
          done

      - name: Run ansible-playbook
        run: |
          echo 'git_branch_name: ${{ steps.get-target-branch.outputs.result }}' > ansible/group_vars/all/git_branch_name.yaml
          make ansible

      - name: Run bench
        id: bench
        run: |
          ssh isucon@${{ steps.get-ip-addresses.outputs.bench_ip }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ./webapp/script/run-bench.sh > bench_result.txt
          bench_result=$(cat bench_result.txt)
          bench_result=${bench_result//$'\n'/\\n}
          echo "::set-output name=result::$bench_result"

      - name: Get metrics of webapp1
        id: webapp1
        run: |
          ssh isucon@${{ steps.get-ip-addresses.outputs.webapp1_ip }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ./webapp/script/alp.sh > webapp1_result.txt
          
          webapp1_result=$(cat webapp1_result.txt)
          webapp1_result=${webapp1_result//$'\n'/\\n}
          echo "::set-output name=result::$webapp1_result"

      - name: Get metrics of webapp2
        id: webapp2
        run: |
          echo "MySQL\n" > webapp2_result.txt
          ssh isucon@${{ steps.get-ip-addresses.outputs.webapp2_ip }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ./webapp/script/slow-query-mysql.sh >> webapp2_result.txt
          echo "\nRedis\n" >> webapp2_result.txt
          ssh isucon@${{ steps.get-ip-addresses.outputs.webapp2_ip }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ./webapp/script/slow-query-redis.sh >> webapp2_result.txt
          
          webapp2_result=$(cat webapp2_result.txt)
          webapp2_result=${webapp2_result//$'\n'/\\n}
          echo "::set-output name=result::$webapp2_result"

      - name: Get metrics of webapp3
        id: webapp3
        run: |
          ssh isucon@${{ steps.get-ip-addresses.outputs.webapp3_ip }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ./webapp/script/alp.sh > webapp3_result.txt
          
          webapp3_result=$(cat webapp3_result.txt)
          webapp3_result=${webapp3_result//$'\n'/\\n}
          echo "::set-output name=result::$webapp3_result"

      - name: Get other metrics of webapp1 for debug
        run: |
          ssh isucon@${{ steps.get-ip-addresses.outputs.webapp1_ip }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no <<- EOF
          echo 'NEXT-WEBAPP1----------------------------------------------------------------'
          sudo journalctl -u isucondition.go.service || echo 'FAILED 1'
          echo 'NEXT----------------------------------------------------------------'
          sudo journalctl -u nginx.service || echo 'FAILED 2'
          echo 'NEXT----------------------------------------------------------------'
          sudo cat /var/log/nginx/error.log || echo 'FAILED 3'
          EOF

      - name: Get other metrics of webapp2 for debug
        run: |
          ssh isucon@${{ steps.get-ip-addresses.outputs.webapp2_ip }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no <<- EOF
          echo 'NEXT-WEBAPP2----------------------------------------------------------------'
          sudo journalctl -u mysql.service || echo 'FAILED 1'
          echo 'NEXT----------------------------------------------------------------'
          sudo cat /var/log/mysql/error.log || echo 'FAILED 2'
          echo 'NEXT----------------------------------------------------------------'
          sudo journalctl -u redis.service || echo 'FAILED 3'
          echo 'NEXT----------------------------------------------------------------'
          sudo cat /var/log/redis/redis-server.log || echo 'FAILED 4'
          EOF

      - name: Get other metrics of webapp3 for debug
        run: |
          ssh isucon@${{ steps.get-ip-addresses.outputs.webapp3_ip }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no <<- EOF
          echo 'NEXT-WEBAPP3----------------------------------------------------------------'
          sudo journalctl -u isucondition.go.service || echo 'FAILED 1'
          echo 'NEXT----------------------------------------------------------------'
          sudo journalctl -u nginx.service || echo 'FAILED 2'
          echo 'NEXT----------------------------------------------------------------'
          sudo cat /var/log/nginx/error.log || echo 'FAILED 3'
          EOF

      - name: Destroy terraform
        if: always()
        working-directory: ./terraform
        run: |
          terraform destroy -auto-approve

      - name: Get commit HEAD
        id: get-commit-head
        run: echo "::set-output name=hash::$(git rev-parse HEAD)"

  comment-results:
    runs-on: ubuntu-latest
    needs: run-bench
    steps:
      - name: Build result comment
        id: comment
        run: |
          comment=$(cat << EOF
          # Benchmark Result
          ## Target Commit
          https://github.com/${{ github.repository }}/commit/${{ needs.run-bench.outputs.head-commit-hash }}
          ## Result
          ### Benchmark
          <details>

          \`\`\`
          ${{ needs.run-bench.outputs.bench-result }}
          \`\`\`

          </details>

          ### Alp of webapp1
          <details>

          \`\`\`
          ${{ needs.run-bench.outputs.webapp1-result }}
          \`\`\`

          </details>

          ### Slow query of webapp2
          <details>

          \`\`\`
          ${{ needs.run-bench.outputs.webapp2-result }}
          \`\`\`
          
          </details>

          ### Alp of webapp3
          <details>

          \`\`\`
          ${{ needs.run-bench.outputs.webapp3-result }}
          \`\`\`
          
          </details>

          EOF
          )
          
          comment=${comment//$'\n'/\\n}
          comment=${comment//$'`'/'\`'}
          echo "::set-output name=comment::$comment"

      - name: Comment results
        uses: actions/github-script@v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${{ steps.comment.outputs.comment }}`
            })
